package kr.or.ddit.member.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.common.AttatchVO;
import kr.or.ddit.expert.service.EprodServiceImpl;
import kr.or.ddit.expert.vo.ExpertProdVO;
import kr.or.ddit.mapper.attach.AttatchMapper;
import kr.or.ddit.mapper.member.MypageMapper;
import kr.or.ddit.member.vo.ExpertVO;
import kr.or.ddit.member.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class MypageServiceImpl implements IMypageService {
	
	@Inject
	private MypageMapper mypageMapper;
	
	@Inject
	private AttatchMapper attatchMapper;
	
	@Value("#{appInfo['attatchPath']}")
	private File saveFolder;
	
	@Override
	public ServiceResult progressUpdate(String epayNum) {
		
		ServiceResult result = null;
		int updateChk = mypageMapper.progressUpdate(epayNum);
		
		if (updateChk > 0) {
			result = ServiceResult.OK;
		} else {
			result = ServiceResult.FAIL;
		}
		return result;
		
	}

	@Override
	public List<ExpertVO> totalList(MemberVO member) {
		return mypageMapper.mentorList(member);
	}

	
	@Override
	public int mentorInsert(ExpertVO expertVO) {
		
		try {
			processAttatches(expertVO);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		// 일반 데이터 insert
		int result = mypageMapper.mentorInsert(expertVO);
		
		return result;
	}
	
	
	private void processAttatches(ExpertVO expertVO) throws IOException {
		List<AttatchVO> attatchList = expertVO.getAttatchList();
		if (attatchList == null || attatchList.isEmpty()) {
			return;
		}
		log.info("mypost:{}", expertVO);
		log.info("attatchList:{}", attatchList);
		log.info("saveFolder:{}", saveFolder);
		
		// 파일 insert
		attatchMapper.mentorInsertAttatch(expertVO);
		// 2진 데이터(파일 자체) 저장 -> d:/saveFiles

		for (AttatchVO attatch : attatchList) {
			MultipartFile file = attatch.getAttatchFile();
			attatch.saveTo(saveFolder);
		}
	}
	
	
}
