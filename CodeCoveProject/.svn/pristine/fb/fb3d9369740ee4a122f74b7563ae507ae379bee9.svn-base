package kr.or.ddit.expert.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.annotation.Resource;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.IOUtils;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.common.AttatchVO;
import kr.or.ddit.expert.service.IEprodService;
import kr.or.ddit.expert.vo.ExpertProdVO;
import kr.or.ddit.expert.vo.MyExpertVO;
import kr.or.ddit.member.service.IMemberService;
import kr.or.ddit.member.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/coco/solution")
public class EprodController {
	
	@Inject
	private IMemberService memberService;
	
	@Inject
	private IEprodService prodService;
	
	@Resource(name="uploadPath")
	private String resourcePath;

//템플릿 화면 출력
	@GetMapping("/templateInsert")
	public String templteInsertForm( HttpServletRequest req, RedirectAttributes ra, Model model){
		
		//로그인세션넘기기
		HttpSession session = req.getSession();
		MemberVO sessionMember = (MemberVO) session.getAttribute("SessionInfo");		
		MemberVO member = memberService.selectMember(sessionMember);
		ExpertProdVO expertProdVO = new ExpertProdVO();
		expertProdVO.setMemId(sessionMember.getMemId());
		model.addAttribute("member", member);
		
		return "solutions/insertForm";
	}
	

	

//템플릿 인서트 프로세스
	@PostMapping("/templateInsert")
	public String templateInsert(ExpertProdVO expertProdVO, Model model, Errors error) throws Exception{
		String goPage = "";
		String thumbnail = expertProdVO.getEprodThumbnail();
		

		
		log.debug("체킁: " + thumbnail);
		
		
		if(thumbnail == null) {
			expertProdVO.setEprodThumbnail("/resources/images/noImg.png");
		}

		if(!error.hasErrors()) {
			model.addAttribute("expertProdVO", expertProdVO);
			prodService.templateInsert(expertProdVO);
			goPage="/solutions/templateList";
		}
		
		return goPage;
	}
	

	
	

	
	
	//템플릿 디테일
	@GetMapping("/templateDetail")
	public String templateDetail(String eprodNum, Model model, HttpServletRequest req ) {
		ExpertProdVO expertProd = prodService.templateDetail(eprodNum);
		
		model.addAttribute("expertProd", expertProd);
		log.debug("expertProd {}",expertProd);
		
		//로그인세션넘기기
		HttpSession session = req.getSession();
		MemberVO sessionMember = (MemberVO) session.getAttribute("SessionInfo");		
		MemberVO member = memberService.selectMember(sessionMember);
		ExpertProdVO expertProdVO = new ExpertProdVO();
		expertProdVO.setMemId(sessionMember.getMemId());
		model.addAttribute("member", member);

		
		
		
		return "/solutions/templateDetail";
	}

	
	//결제완료 전에 아작스로 구매내역 인서트 하는 메소드
	@PostMapping(value="/templateDetail",produces = "application/json;charset=utf-8")
	@ResponseBody  // 직접응답, view로 돌리지 않음, 아작스용은 이게 붙어 있어야 함
	public String templatePurchase(@RequestBody Map<String,String> jsonMap) {
		
		MyExpertVO myExpertVO =  new MyExpertVO();
		myExpertVO.setEprodNum(jsonMap.get("eprodNum"));
		myExpertVO.setBuyerId(jsonMap.get("buyerId"));
		myExpertVO.setProgressCode("완료");
		myExpertVO.setEprodPrice(jsonMap.get("eprodPrice"));
		myExpertVO.setEprodName(jsonMap.get("eprodName"));
		myExpertVO.setEprodSummary(jsonMap.get("eprodSummary"));
		myExpertVO.setEprodGrade(jsonMap.get("eprodGrade"));
		
		
		prodService.buyInsert(myExpertVO);
		
		log.debug("넘어온 값 체크: {}", jsonMap);
		return "주은 만만세";
		
	}
	
	
	
	
	
	
}




