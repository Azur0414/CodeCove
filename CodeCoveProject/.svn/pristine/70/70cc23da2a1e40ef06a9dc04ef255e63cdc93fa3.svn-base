package kr.or.ddit.board.service.Impl;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.blog.vo.MyBlogPostVO;
import kr.or.ddit.board.service.IFreeBoardService;
import kr.or.ddit.board.vo.FreeBoardVO;
import kr.or.ddit.common.AttatchVO;
import kr.or.ddit.common.PaginationInfoVO;
import kr.or.ddit.mapper.attach.AttatchMapper;
import kr.or.ddit.mapper.board.FreeBoardMapper;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class FreeBoardServiceImpl implements IFreeBoardService {

	@Inject
	private FreeBoardMapper mapper;

	@Inject
	AttatchMapper attatchMapper;

	@Value("#{appInfo['attatchPath']}")
	private File saveFolder;

	@PostConstruct
	public void init() throws IOException {
		log.info("주입된 저장 경로 : {}", saveFolder.getCanonicalPath());
	}

	@Override
	public List<FreeBoardVO> selectBoardList(PaginationInfoVO<FreeBoardVO> pagingVO) {
		return mapper.selectFreeBoardList(pagingVO);
	}

	@Override
	public int selectBoardCount(PaginationInfoVO<FreeBoardVO> pagingVO) {
		return mapper.selectFreeBoardCount(pagingVO);
	}

	@Transactional
	@Override
	public int insertFreeBoard(FreeBoardVO freeBoardVO) {
		try {
			processAttatches(freeBoardVO); // 첨부파일 처리.
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		int rowcnt = mapper.insertFreeBoard(freeBoardVO);

		return rowcnt;
	}
	private void processAttatches(FreeBoardVO freeBoardVO) throws IOException {
		List<AttatchVO> attatchList = freeBoardVO.getAttatchList();
		if (attatchList == null || attatchList.isEmpty()) {
			return;
		}
		log.info("freeBoardVO:{}", freeBoardVO);
		log.info("attatchList:{}", attatchList);
		log.info("saveFolder:{}", saveFolder);
		attatchMapper.insertFreeBoardAttatches(freeBoardVO);
		// 2진 데이터(파일 자체) 저장 -> d:/saveFiles

		for (AttatchVO attatch : attatchList) {
			MultipartFile file = attatch.getAttatchFile();
			attatch.saveTo(saveFolder);
		}
	}

	@Override
	public FreeBoardVO read(String freeNum) {
		mapper.viewNum(freeNum);
		FreeBoardVO freeBoardVO=mapper.read(freeNum);
		return freeBoardVO;
	}
}
