package kr.or.ddit.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import kr.or.ddit.ServiceResult;
import kr.or.ddit.admin.service.IComcodeService;
import kr.or.ddit.admin.vo.ComCodeVO;
import kr.or.ddit.common.PaginationInfoVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/coco/admin")
public class CodeRegisterController {
	
	@Inject
	private IComcodeService comCodeService;

	// 코드 인서트 화면	
	@GetMapping("/codeForm")
	public String insertCodeForm(Model model) {
		
		List<ComCodeVO> grpList = comCodeService.selectGrpList();
		
		model.addAttribute("grpList", grpList);
		return "admins/form_code";
	}
	
	@PostMapping("/registerComCode")
	public String registerComCode(HttpServletRequest req, ComCodeVO comCodeVO, Model model) {
		String goPage =	"";
		HttpSession session = req.getSession();
		
		ServiceResult result = comCodeService.registerComCode(req, comCodeVO);
		if(result.equals(ServiceResult.OK) ) {
			goPage = "redirect:/coco/admin/codeDetail?comCode=" + comCodeVO.getComCode().toUpperCase();
		} else {
			
		}
		
		return goPage;
	}
	
	
	// 코드그룹 인서트 메소드
	@PostMapping("/registerGroup")
	public String registerCode(
				HttpServletRequest req,
				ComCodeVO comCodeVO, 
				Model model
			) {
		String goPage = "";
		Map<String, String> errors = new HashMap<String, String>();
		
		if(StringUtils.isBlank(comCodeVO.getComCodeGrp())) {
			errors.put("comCode", "관리코드그룹을 입력해주세요.");
		}
		if(StringUtils.isBlank(comCodeVO.getComCodeGrpNm())) {
			errors.put("comCode", "관리코드그룹이름을 입력해주세요.");
		}
		
		if(errors.size() > 0 ) {
			model.addAttribute("errors", errors);
			model.addAttribute("codeCodeVO", comCodeVO);
			goPage = "coco/admin/form";
		} else {
			HttpSession session = req.getSession();
			
			ServiceResult result = comCodeService.insertComCodeGroup(req, comCodeVO);
			if(result.equals(ServiceResult.OK)) {
				goPage = "redirect:/coco/admin/codeGroupList"; 
			} else {
				errors.put("message", "서버 에러, 다시 시도해주세요!");
				model.addAttribute("errors", errors);
				goPage = "coco/admin/codeGroupList";
			}
		}
		return goPage;
	}

}
